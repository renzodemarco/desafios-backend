components:
  schemas:
    Tickets:
      type: object
      properties:
        code: 
          type: string
          description: Código del ticket
        purchase_datetime:
          type: string
          description: Fecha y hora de la realización de la compra
        amount:
          type: number
          description: Monto del total de la compra
        purchaser:
          type: string
          description: Correo electrónico del usuario que realiza la compra
        products:
          type: array
          items:
            type: object
            properties:
              product:
                type: string
                description: ObjectId de referencia del producto en el carrito
              quantity:
                type: number
                description: Cantidad del producto que hay en el carrito
  responses:
    createSuccess:
      type: object
      description: Objeto con el ticket creado sumado al _id y _v de Mongo DB
      example:
        code: 26d972
        purchase_datetime: 1/10/2023, 16:58:47
        amount: 675
        purchaser: mail@gmail.com
        products:
          - product: 64d7bf86678402946f7a1268
            quantity: 1
        _id: 6519cf77f67ff55ea0397e6d
        __v: 0
    readSuccess:
      type: array
      items: 
        type: object
      description: Lista de todos los tickets
    clientError:
      type: object
      properties:
        status:
          type: number
          description: Estado de la solicitud
        from:
          type: string
          description: Método, endpoint y origen del error
        message:
          type: string
          description: Descripción del error
      example:
        status: 400
        from: POST /api/tickets controller
        message: Incomplete values
    authenticationError:
      type: object
      properties:
        status:
          type: number
          description: Estado de la solicitud
        from:
          type: string
          description: Método, endpoint y origen del error
        message:
          type: string
          description: Descripción del error
      example:
        status: 401
        from: POST /api/tickets middleware
        message: Invalid credentials
    authorizationError:
      type: object
      properties:
        status:
          type: number
          description: Estado de la solicitud
        from:
          type: string
          description: Método, endpoint y origen del error
        message:
          type: string
          description: Descripción del error
      example:
        status: 403
        from: POST /api/tickets middleware
        message: Not allowed
    notFoundError:
      type: object
      properties:
        status:
          type: number
          description: Estado de la solicitud
        from:
          type: string
          description: Método, endpoint y origen del error
        message:
          type: string
          description: Descripción del error
      example:
        status: 404
        from: GET /api/tickets dao
        message: Ticket not found
    serverError:
      type: object
      properties:
        status:
          type: number
          description: Estado de la solicitud
        from:
          type: string
          description: Método, endpoint y origen del error
        message:
          type: string
          description: Descripción del error
      example:
        status: 500
        from: POST /api/tickets dao
        message: tiket is not defined
  securityDefinitions:
    cookieAuth:
      type: apiKey
      in: cookie
      name: token

paths: 
  /api/tickets:
    post:
      summary: Crear un nuevo ticket en la base de datos
      tags:
        - Tickets
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#components/schemas/Tickets'
      responses:
        "201":
          description: Éxito en la creación de un ticket
          content:
            application/json:
              schema:
                $ref: '#components/responses/createSuccess'
        "400":
          description: Falta de valores para la creación de un ticket
          content:
            application/json:
              schema:
                $ref: '#components/responses/clientError'
        "401":
          description: Sin autenticación
          content:
            application/json:
              schema:
                $ref: '#components/responses/authenticationError'
        "403":
          description: Sin autorización
          content:
            application/json:
              schema:
                $ref: '#components/responses/authorizationError'
        "500":
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: '#components/responses/serverError'
    get:
      summary: Leer un ticket de la base de datos
      tags:
        - Tickets
      parameters:
      - name: tid
        in: path
        required: true
        description: Id del ticket a leer
        type: string
      responses:
        "200":
          description: Éxito en la lectura del ticket
          content:
            application/json:
              schema:
                $ref: '#components/responses/readSuccess'
        "401":
          description: Sin autenticación
          content:
            application/json:
              schema:
                $ref: '#components/responses/authenticationError'
        "403":
          description: Sin autorización
          content:
            application/json:
              schema:
                $ref: '#components/responses/authorizationError'
        "404":
          description: Ticket no encontrado
          content:
            application/json:
              schema:
                $ref: '#components/responses/notFoundError'
        "500":
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: '#components/responses/serverError'