components:
  schemas:
    Tickets:
      type: object
      properties:
        code: 
          type: string
          description: Código del ticket
        purchase_datetime:
          type: string
          description: Fecha y hora de la realización de la compra
        amount:
          type: number
          description: Monto del total de la compra
        purchaser:
          type: string
          description: Correo electrónico del usuario que realiza la compra
        products:
          type: array
          items:
            type: object
            properties:
              product:
                type: string
                description: ObjectId de referencia del producto en el carrito
              quantity:
                type: number
                description: Cantidad del producto que hay en el carrito
      example:
        ticket:
          code: "227632"
          purchase_datetime: "10/12/2023, 18:32:12"
          amount: 160
          purchaser: "solcis@gmail.com"
          products: [{
            product: "64d7bf86678402946f7a126b",
            quantity: 1,
            _id: "65762e4584ee367eee9b980b"
          }]
  tickets:
    responses:
      createSuccess:
        type: object
        description: Objeto con el ticket creado sumado al _id y _v de Mongo DB
        example:
          ticket:
            code: "227632"
            purchase_datetime: "10/12/2023, 18:32:12"
            amount: 160
            purchaser: "solcis@gmail.com"
            products: [{
              product: "64d7bf86678402946f7a126b",
              quantity: 1,
              _id: "65762e4584ee367eee9b980b"
            }]
          _id: "65762e5c84ee367eee9b9820"
          __v: 0
          noStock: []
      readSuccess:
        type: array
        items: 
          type: object
        description: Lista de todos los tickets
        example:
          cart:
            _id: "65760847c4170867c44f9671"
            products: []
            __v: 6
            owner:
              _id: "65760847c4170867c44f9673"
              first_name: "María Sol"
              last_name: "Domínguez Dahl"
              email: "solcis@gmail.com"
              age: 25
              password: "$2b$10$hKt7Q7pNSiWWRti/Vg1h1eaWIHojsVJIJbpZh6RdSH.1FmO7HASme"
              cart: "65760847c4170867c44f9671"
              role: "user"
              __v: 0
            cartPrice: 0
          totalPrice: 0
      clientError:
        type: object
        properties:
          status:
            type: number
            description: Estado de la solicitud
          from:
            type: string
            description: Método, endpoint y origen del error
          message:
            type: string
            description: Descripción del error
        example:
          status: 400
          from: POST /api/tickets
          message: Incomplete values
      authenticationError:
        type: object
        properties:
          status:
            type: number
            description: Estado de la solicitud
          from:
            type: string
            description: Método, endpoint y origen del error
          message:
            type: string
            description: Descripción del error
        example:
          status: 401
          from: POST /api/tickets
          message: Invalid credentials
      authorizationError:
        type: object
        properties:
          status:
            type: number
            description: Estado de la solicitud
          from:
            type: string
            description: Método, endpoint y origen del error
          message:
            type: string
            description: Descripción del error
        example:
          status: 403
          from: POST /api/tickets
          message: Not allowed
      notFoundError:
        type: object
        properties:
          status:
            type: number
            description: Estado de la solicitud
          from:
            type: string
            description: Método, endpoint y origen del error
          message:
            type: string
            description: Descripción del error
        example:
          status: 404
          from: GET /api/tickets
          message: Ticket not found
      serverError:
        type: object
        properties:
          status:
            type: number
            description: Estado de la solicitud
          from:
            type: string
            description: Método, endpoint y origen del error
          message:
            type: string
            description: Descripción del error
        example:
          status: 500
          from: POST /api/tickets
          message: tiket is not defined

paths: 
  /api/tickets:
    post:
      summary: Crear un nuevo ticket en la base de datos (user)
      tags:
        - Tickets
      security:
        - cookieAuth: []
      responses:
        "201":
          description: Éxito en la creación de un ticket
          content:
            application/json:
              schema:
                $ref: '#components/tickets/responses/createSuccess'
        "400":
          description: Falta de valores para la creación de un ticket
          content:
            application/json:
              schema:
                $ref: '#components/tickets/responses/clientError'
        "401":
          description: Sin autenticación
          content:
            application/json:
              schema:
                $ref: '#components/tickets/responses/authenticationError'
        "403":
          description: Sin autorización
          content:
            application/json:
              schema:
                $ref: '#components/tickets/responses/authorizationError'
        "500":
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: '#components/tickets/responses/serverError'
    get:
      summary: Calcular el precio del ticket (user)
      tags:
        - Tickets
      security:
        - cookieAuth: []
      responses:
        "200":
          description: Éxito en la lectura del ticket
          content:
            application/json:
              schema:
                $ref: '#components/tickets/responses/readSuccess'
        "401":
          description: Sin autenticación
          content:
            application/json:
              schema:
                $ref: '#components/tickets/responses/authenticationError'
        "403":
          description: Sin autorización
          content:
            application/json:
              schema:
                $ref: '#components/tickets/responses/authorizationError'
        "404":
          description: Ticket no encontrado
          content:
            application/json:
              schema:
                $ref: '#components/tickets/responses/notFoundError'
        "500":
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: '#components/tickets/responses/serverError'