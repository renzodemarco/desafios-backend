components:
  schemas:
    Users:
      properties:
        first_name:
          type: string
          description: Nombre del usuario
        last_name:
          type: string
          description: Apellido del usuario
        email:
          type: string
          description: Correo electrónico del usuario
        age:
          type: number
          description: Edad del usuario
        password:
          type: string
          description: Contraseña del usuario hasheada
        cart:
          type: string
          description: ObjectId de referencia al carrito del usuario
        role:
          type: string
          description: Rol del usuario (user, premium o admin)
      example:
        first_name: María Sol
        last_name: Domínguez Dahl
        email: solcis@gmail.com
        age: 25
        password: '1234'
        cart: 651842d299f3f80802c58256
        role: premium
  sessions:
    create:
      type: object
      properties:
        first_name:
          type: string
          description: Nombre del usuario
        last_name:
          type: string
          description: Apellido del usuario
        email:
          type: string
          description: Correo electrónico del usuario
        age:
          type: number
          description: Edad del usuario
        password:
          type: string
          description: Contraseña del usuario
      example:
        first_name: María Sol
        last_name: Domínguez Dahl
        email: solcis@gmail.com
        age: 25
        password: '1234'
    login:
      type: object
      properties:
        email:
          type: string
        description: Correo electrónico para ingresar
        password:
          type: string
          description: Contraseña para ingresar
      example:
        email: solcis@gmail.com
        password: '1234'
    update:
      user:
        type: object
        properties:
          email:
            type: string
            description: Correo electrónico del usuario
          password:
            type: string
            description: Nueva contraseña
          example:
            email: solcis@gmail.com
            password: '4321'
    responses:
      loginSuccess:
        type: object
        description: Token de acceso conteniendo la información del usuario
        example:
          accessToken: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2NTE4NDJkMzk5ZjNmODA4MDJjNTgyNTgiLCJ1c2VyIjp7I6MTcwMjIzNDEyMCwiZXhwIjoxNzAyMjM3NzIwfQ.sjLux-26KJ4NtJe02FCJmMRpT45oeNkDgTOU4kluq-0"
      createSuccess:
        type: object
        description: Objeto con el usuario creado sumado al _id y _v de Mongo DB
        example:
          first_name: María Sol
          last_name: Domínguez Dahl
          email: solcis@gmail.com
          age: 25
          password: $2b$10$avZGokuFhhjh88jasHYiKuo4hJdwoMkHhYjYFiod/ItzmRzGBeH7e
          cart: 651842d299f3f80802c58256
          role: premium
          _id: 653bc489806d3d93518d1ea8
          _v: 0
      signoutSuccess:
        type: object
        description: Mensaje de éxito tras cerrar sesión
        example:
          success: true
      readSuccess:
        type: object
        description: Objeto con el usuario leído
        example:
          first_name: María Sol
          last_name: Domínguez Dahl
          email: solcis@gmail.com
          age: 25
          password: $2b$10$avZGokuFhhjh88jasHYiKuo4hJdwoMkHhYjYFiod/ItzmRzGBeH7e
          cart: 651842d299f3f80802c58256
          role: premium
          _id: 653bc489806d3d93518d1ea8
          _v: 0
      updateSuccess:
        type: object
        description: Objeto con el usuario actualizado
        example:
          first_name: María Sol
          last_name: Domínguez Dahl
          email: solcis@gmail.com
          age: 25
          password: $2b$10$avZGokuFhhjh88jasHYiKuo4hJdwoMkHhYjYFiod/ItzmRzGBeH7e
          cart: 651842d299f3f80802c58256
          role: premium
          _id: 653bc489806d3d93518d1ea8
          _v: 0
      deleteSuccess:
        type: object
        description: Objeto con el usuario eliminado
        example:
          first_name: María Sol
          last_name: Domínguez Dahl
          email: solcis@gmail.com
          age: 25
          password: $2b$10$avZGokuFhhjh88jasHYiKuo4hJdwoMkHhYjYFiod/ItzmRzGBeH7e
          cart: 651842d299f3f80802c58256
          role: premium
          _id: 653bc489806d3d93518d1ea8
          _v: 0
      clientError:
        type: object
        properties:
          status:
            type: number
            description: Estado de la solicitud
          from:
            type: string
            description: Método, endpoint y origen del error
          message:
            type: string
            description: Descripción del error
        example:
          status: 401
          from: POST /api/auth
          message: Not valid email or password
      authenticationError:
        type: object
        properties:
          status:
            type: number
            description: Estado de la solicitud
          from:
            type: string
            description: Método, endpoint y origen del error
          message:
            type: string
            description: Descripción del error
        example:
          status: 401
          from: POST /api/auth
          message: Invalid credentials
      authorizationError:
        type: object
        properties:
          status:
            type: number
            description: Estado de la solicitud
          from:
            type: string
            description: Método, endpoint y origen del error
          message:
            type: string
            description: Descripción del error
        example:
          status: 403
          from: POST /api/auth
          message: Not allowed
      notFoundError:
        type: object
        properties:
          status:
            type: number
            description: Estado de la solicitud
          from:
            type: string
            description: Método, endpoint y origen del error
          message:
            type: string
            description: Descripción del error
        example:
          status: 404
          from: GET /api/auth
          message: User not found
      serverError:
        type: object
        properties:
          status:
            type: number
            description: Estado de la solicitud
          from:
            type: string
            description: Método, endpoint y origen del error
          message:
            type: string
            description: Descripción del error
        example:
          status: 500
          from: POST /api/auth
          message: usert is not defined
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: accessToken

paths:
  /api/auth/login:
    post:
      summary: Iniciar sesión
      tags:
        - Sessions
      requestBody:
        required: true
        description: Correo electrónico y contraseña con los que se quiere iniciar sesión
        content:
          application/json:
            schema:
              $ref: "#/components/sessions/login"
      responses:
        "200":
          description: El éxito devuelve y setea una cookie "accessToken" con información del usuario para enviar en las peticiones que requieran autenticación
          content:
            application/json:
              schema:
                $ref: "#/components/sessions/responses/loginSuccess"
          headers:
            Set-Cookie:
              schema:
                type: string
                example: accessToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjMDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        "401":
          description: Valores incorrectos para el inicio de sesión
          content:
            application/json:
              schema:
                $ref: "#/components/sessions/responses/clientError"
        "404":
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/sessions/responses/notFoundError"
        "500":
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/sessions/responses/serverError"
  /api/auth/register:
    post:
      summary: Registrar un nuevo usuario
      tags:
        - Sessions
      requestBody:
        required: true
        description: Información del usuario a registrar
        content:
          application/json:
            schema:
              $ref: "#/components/sessions/create"
      responses:
        "201":
          description: El éxito retorna un objeto con los datos del usuario creado
          content:
            application/json:
              schema:
                $ref: "#/components/sessions/responses/createSuccess"
        "400":
          description: Falta de valores para el registro
          content:
            application/json:
              schema:
                $ref: "#/components/sessions/responses/clientError"
        "500":
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/sessions/responses/serverError"
  /api/auth/signout:
    post:
      summary: Cerrar sesión
      tags:
        - Sessions
      security:
        - cookieAuth: []
      responses:
        "200":
          description: Éxito en el cierre de sesión
          content:
            application/json:
              schema:
                $ref: "#/components/sessions/responses/signoutSuccess"
        "401":
          description: Sin autenticación
          content:
            application/json:
              schema:
                $ref: "#/components/sessions/responses/authenticationError"
        "500":
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/sessions/responses/serverError"